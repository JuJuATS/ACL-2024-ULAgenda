<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Modifier Rendez-vous</title>
    <link rel="stylesheet" href="/css/rendezvous/modifier_rdv.css"> 
</head>
<body>
    <div class="wrapper">
        <button class="toggle-dark-mode" onclick="toggleDarkMode()">ðŸŒ™</button>
        <div class="container">
            <h1 class="h1">Modifier le rendez-vous</h1>
            <form id="edit-rendezvous-form" data-id="<%= rendezvous._id %>">
                <div class="form-group">
                    <label for="nom">Nom du rendez-vous:</label>
                    <input type="text" id="nom" name="nom" value="<%= rendezvous.name %>" required>
                </div>

                <div class="form-group">
                    <label for="date">Date du rendez-vous:</label>
                    <input type="date" id="date" name="date" value="<%= rendezvous.dateDebut.toISOString().slice(0, 10) %>" required>
                </div>

                <div class="form-group">
                    <label for="heureDebut">Heure de dÃ©but:</label>
                    <input type="time" id="heureDebut" name="heureDebut"
                           value="<%= rendezvous.dateDebut.toISOString().slice(11, 16) %>" required>
                </div>

                <div class="form-group">
                    <label for="duree">DurÃ©e (en minutes):</label>
                    <input type="number" id="duree" name="duree"
                           value="<%= Math.round((new Date(rendezvous.dateFin) - new Date(rendezvous.dateDebut)) / 60000) %>" min="0" step="1" required>
                </div>

                <div class="form-group">
                    <label for="description">Description:</label>
                    <textarea id="description" name="description" rows="4" required><%= rendezvous.description %></textarea>
                </div>

                <div class="form-group">
                    <button type="submit" class="btn-modifier">Modifier le rendez-vous</button>
                </div>
                <div class="recurrence-form-container">
                    <h1 class="h1" style="color: #005f99 !important; text-align: center !important;">Ajoutez des RÃ©currences</h1>
                    <form id="recurrence-form">
                        <div class="tabs-container">
                            <div class="tab">
                                <% ['week', 'month', 'year'].forEach((mode, i) => { %>
                                    <div>
                                        <button
                                                type="button"
                                                class="tablinks"
                                                onclick="openMode(this, '<%= mode %>')">
                                            <span><%= `${mode==='year'?
                                                        'AnnÃ©e':mode==='month'?
                                                                'Mois':'Semaine'
                                                }`
                                                %>
                                            </span>
                                        </button>
                                    </div>
                                <% }); %>
                            </div>

                            <div class="common">
                                <button type=button class="clear-selection" onclick="clearSelection()">Clear</button>
                                <label>Jusqu'au : </label>
                                <input class="date" type="date" id="dateUntilRecurrence" name="date" value="<%= rec.dateFin.toISOString().slice(0, 10) %>" required>
                            </div>


                            <div id="week" class="tabcontent">
                                <% ['Lundi',
                                    'Mardi',
                                    'Mercredi',
                                    'Jeudi',
                                    'Vendredi',
                                    'Samedi',
                                    'Dimanche'
                                ].forEach((day, id) => { %>
                                    <% if (rec.weekDay.includes(id)) { %>
                                        <button type=button class="wday selected" onclick="selectDay(this, <%= id %>)"><%= day %></button>
                                    <% } else { %>
                                        <button type=button class="wday" onclick="selectDay(this, <%= id %>)"><%= day %></button>
                                    <% } %>
                                <% }) %>
                            </div>

                            <div id="month" class="tabcontent">
                                <% for (let i=1; i<=31; i++) { %>
                                    <% if (rec.monthDay.includes(i)) { %>
                                        <button type=button class="mday selected" onclick="selectDay(this, <%= i %>)"><%= i %></button>
                                    <% } else { %>
                                        <button type=button class="mday" onclick="selectDay(this, <%= i %>)"><%= i %></button>
                                    <% } %>

                                <% } %>
                            </div>

                            <div id="year" class="tabcontent">
                                <!--<label for="date">Date de la rÃ©currence :</label>-->
                                <ul class="yearList">
                                    <% rec.yearDay.forEach((date, index) => { %>
                                        <li data-index="<%= index %>">
                                            <%= new Date(date).toLocaleDateString('en-GB', { day: '2-digit', month: '2-digit' }) %>
                                            <button type="button" onclick="removeDate(<%= index %>)"></button>
                                        </li>
                                    <% }) %>
                                </ul>
                                <div class="selector-year-day">
                                    <input class="annee" type="date" id="dateYearRecurrence" name="date" placeholder="DD/MM">
                                    <button type=button id="addButton"></button>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
            </form>
        </div>
    </div>

    <script>
        const agendaId = "<%= rendezvous.agendaId %>";
        const recId = "<%= recIdd %>";
        const ya = <%- JSON.stringify(rec.yearDay) %>;
        const recurrencesD = {"week": [<%= rec.weekDay %>] ,"month":[<%= rec.monthDay %>],"year":ya}
        const addBoutton = document.querySelector("#addButton")
        addBoutton.addEventListener("click",addYearDay)
        function clearSelection() {
            recurrencesD[currentTab] = []
            Array.from(document.querySelector(`#${currentTab}`).children).forEach(c => {
                c.classList.remove('selected')
            })
        }
        function selectDay(e, day) {

            e.classList.toggle("selected")
            const index = recurrencesD[currentTab].indexOf(day);

            if (index===-1) {
                recurrencesD[currentTab].push(day);
            } else {
                recurrencesD[currentTab].splice(index, 1);
            }
        }
        function removeDate(index) {
            recurrencesD.year.splice(index, 1);
            document.querySelector(`.yearList li[data-index="${index}"]`).remove();
        }
        function addYearDay() {
            const date = new Date(document.querySelector("#dateYearRecurrence").value)
            if (date.getDate()) {
                const index = recurrencesD.year.findIndex(e => e.toString() === date.toString());
                if (index === -1) {
                    const li = document.createElement("li");
                    li.textContent = date.toLocaleDateString('en-GB', { day: '2-digit', month: '2-digit' });

                    const button = document.createElement("button");
                    button.type = "button"
                    button.addEventListener('click', function(e) {
                        recurrencesD.year.splice(index, 1);
                        e.currentTarget.parentNode.remove()
                    })

                    li.appendChild(button)
                    document.querySelector(".yearList").appendChild(li)
                    recurrencesD.year.push(date);
                } else {
                    console.log("Date dÃ©jÃ  ajoutÃ©s")
                }
                document.querySelector("#dateYearRecurrence").value = ''
            }
        }
        function calculerHeureFin(dateDebut,heureDebut, duree) {


            const dateString = `${dateDebut}T${heureDebut}:00`; // ajoute les secondes, format ISO 8601
            const durationInMilliseconds = duree * 60 * 1000;
            const date = new Date(dateString);
            const [heures, minutes] = heureDebut.split(':').map(Number);

            return new Date(date.getTime()+durationInMilliseconds);
        }
        function openMode(e, mode) {

            document.querySelectorAll(".tabcontent").forEach(tab => {
                if (tab.id === mode) {
                    tab.style.display = 'flex';
                } else {
                    tab.style.display = 'none';
                }
            })
            currentTab = mode

            document.querySelectorAll(".tablinks").forEach(b => {
                b.parentElement.classList.remove("active");
            })
            e.parentElement.classList.add("active");
            document.querySelectorAll(".tabcontent").forEach(b => {
                b.style.border = '1px solid #cfbff7';
                b.style.borderTop = 'none'
            })
            document.querySelector(".common").style.removeProperty('border-top')
            document.querySelector(".common").style.border = '1px solid #cfbff7'
        }
        document.getElementById('edit-rendezvous-form').addEventListener('submit', async function(event) {
            event.preventDefault();
            const rdvId = this.dataset.id;

            const nom = document.getElementById('nom').value;
            const date = document.getElementById('date').value;
            const heureDebut = document.getElementById('heureDebut').value;
            const duree = parseFloat(document.getElementById('duree').value); // Lire la durÃ©e en heures
            const description = document.getElementById('description').value;

            const finRecurrence = document.getElementById('dateUntilRecurrence').value;

            if (nom && date && heureDebut && duree && description){
                const dateString = `${date}T${heureDebut}:00`; // ajoute les secondes, format ISO 8601
                const dateDebut = new Date(dateString);
                // Calculer l'heure de fin Ã  partir de l'heure de dÃ©but et de la durÃ©e en heures
                const dateFin = calculerHeureFin(date,heureDebut, duree);

                if (dateDebut <= new Date(finRecurrence)){
                    const rendezvous  = {
                        name:nom,
                        dateDebut:dateDebut,
                        dateFin:dateFin,
                        description:description,
                        recId: recId,
                        recurrences: recurrencesD,
                        finRecurrence: new Date(finRecurrence),
                    }
                    try {
                        const response = await fetch(`http://localhost:3000/rendezvous/${rdvId}`, {
                            method: 'PUT',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            credentials: 'include',
                            body: JSON.stringify(rendezvous)
                        });
                        if (response.ok) {
                            alert("Rendez-vous modifiÃ© avec succÃ¨s !");
                            window.location.href = `/rendezvous?agendaId=${agendaId}`;
                        }
                    } catch (error) {
                        console.error('Erreur lors de la modification:', error);
                        alert("Une erreur s'est produite lors de la modification du rendez-vous.");
                    }
                }

            }

        });


        // Bascule du mode sombre
const toggleSwitch = document.getElementById('darkModeToggle');
const body = document.body;

// Toggle dark mode
function toggleDarkMode() {
            document.body.classList.toggle('dark-mode');
        }

    </script>
</body>
</html>