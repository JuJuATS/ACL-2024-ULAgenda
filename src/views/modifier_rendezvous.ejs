<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Modifier Rendez-vous</title>
    <link rel="stylesheet" href="/css/rendezvous/modifier_rdv.css">
    <link rel="stylesheet" href="/css/partials/toaster.css">
</head>
<body>
    <div class="pop-up-info"></div>

    <div class="wrapper">
        <button class="toggle-dark-mode" onclick="toggleDarkMode()">ğŸŒ™</button>
        <div class="container">
            <h1 class="h1">Modifier le rendez-vous</h1>
            <form id="edit-rendezvous-form" data-id="<%= rendezvous._id %>">
                <div class="form-group">
                    <label for="nom">Nom du rendez-vous:</label>
                    <input type="text" id="nom" name="nom" value="<%= rendezvous.name %>" required>
                </div>

                <div class="form-group">
                    <label for="date">Date du rendez-vous:</label>
                    <input type="date" id="date" name="date" value="<%= rendezvous.dateDebut.toISOString().slice(0, 10) %>" required>
                </div>

                <div class="form-group">
                    <label for="heureDebut">Heure de dÃ©but:</label>
                    <input type="time" id="heureDebut" name="heureDebut"
                           value="<%= rendezvous.dateDebut.toISOString().slice(11, 16) %>" required>
                </div>

                <div class="form-group">
                    <label for="duree">DurÃ©e (en minutes):</label>
                    <input type="number" id="duree" name="duree"
                           value="<%= Math.round((new Date(rendezvous.dateFin) - new Date(rendezvous.dateDebut)) / 60000) %>" min="0" step="1" required>
                </div>

                <div class="form-group">
                    <label for="description">Description:</label>
                    <textarea id="description" name="description" rows="4"><%= rendezvous.description %></textarea>
                </div>
                <div class="form-group">
                    <label for="color">Couleur:</label>
                    <input id="color" name="color" type="color" value="<%= rendezvous.color %>">
                </div>
               
                <div class="form-group">
                    <label for="rappel">Rappel:</label>
                    <select id="rappel" name="rappel">
                            <% if(!rappel){ %>
                                <option value="" selected>Aucun</option> 
                                <option value="5" >5 minutes avant</option>
                                <option value="10" >10 minutes avant</option>
                                <option value="25">25 minutes avant</option>
                                <option value="60">1 heure avant</option>
                                <option value="1440">1 jour avant</option>
                            <% } else{ %>
                           
                                <option value="">Aucun</option> 
                                <% if(rappel.duree == 5){ %>
                                    <option value="5" selected >5 minutes avant</option>
                                 <% } else{%>
                                 
                                    <option value="5" >5 minutes avant</option>
                                  <% } %>
                                  <% if(rappel.duree == 10){ %>
                                    <option value="10" selected>10 minutes avant</option>
                                 <% } else{ %>
                                    <option value="10" >10 minutes avant</option>
                                  <% } %>
                                  <% if(rappel.duree == 25){ %>
                                    <option value="25" selected>25 minutes avant</option>
                                 <% } else{ %>
                                    <option value="25">25 minutes avant</option>
                                  <% } %>
                                  <% if(rappel.duree == 60){ %>
                                    <option value="60" selected > 1 heure avant</option>
                                 <% } else{ %>
                                    <option value="60">1 heure avant</option>
                                  <% } %>
                                  <% if(rappel.duree == 1440){ %>
                                    <option value="1440" selected>1 jour avant</option>
                                 <% } else{ %>
                                    <option value="1440">1 jour avant</option>
                                  <% } %>
                              <% } %>
    
                         
                     
                       
                        
                        
                    </select>
                </div>
                <div class="form-group">
                    <label for="priority">PrioritÃ©:</label>
                    <select id="priority" name="priority" required>
                        <option value="Basse">Basse</option>
                        <option value="Moyenne">Moyenne</option>
                        <option value="Haute">Haute</option>
                    </select>
                </div>

                <div class="form-group">
                    <button type="submit" class="btn-modifier">Modifier le rendez-vous</button>
                </div>
                <div class="recurrence-form-container">
                    <h1 class="h1" style="color: #005f99 !important; text-align: center !important;">Ajoutez des RÃ©currences</h1>
                    <form id="recurrence-form">
                        <div class="tabs-container">
                            <div class="tab">
                                <% ['week', 'month', 'year'].forEach((mode, i) => { %>
                                    <div>
                                        <button
                                                type="button"
                                                class="tablinks"
                                                onclick="openMode(this, '<%= mode %>')">
                                            <span><%= `${mode==='year'?
                                                        'AnnÃ©e':mode==='month'?
                                                                'Mois':'Semaine'
                                                }`
                                                %>
                                            </span>
                                        </button>
                                    </div>
                                <% }); %>
                            </div>

                            <div class="common">
                                <button type=button class="clear-selection" onclick="clearSelection()">Clear</button>
                                <label>Jusqu'au : </label>
                                <input class="date" type="date" id="dateUntilRecurrence" name="date" value="<%= rec.dateFin ? rec.dateFin.toISOString().slice(0, 10) : '' %>">
                            </div>

                            <div id="week" class="tabcontent">
                                <div>
                                    <button type=button class="clear-selection" onclick="selectAll()">Tout SÃ©lectionner</button>
                                </div>
                                <div class="l-content">
                                    <% ['Lundi',
                                        'Mardi',
                                        'Mercredi',
                                        'Jeudi',
                                        'Vendredi',
                                        'Samedi',
                                        'Dimanche'
                                    ].forEach((day, id) => { %>
                                        <% if (rec.weekDay.includes(id)) { %>
                                            <button type=button class="wday selected" onclick="selectDay(this, <%= id %>)"><%= day %></button>
                                        <% } else { %>
                                            <button type=button class="wday" onclick="selectDay(this, <%= id %>)"><%= day %></button>
                                        <% } %>
                                    <% }) %>
                                </div>
                            </div>

                            <div id="month" class="tabcontent">
                                <div>
                                    <button type=button class="clear-selection" onclick="selectAll()">Tout SÃ©lectionner</button>
                                </div>
                                <div class="l-content">
                                    <% for (let i=1; i<=31; i++) { %>
                                        <% if (rec.monthDay.includes(i)) { %>
                                            <button type=button class="mday selected" onclick="selectDay(this, <%= i %>)"><%= i %></button>
                                        <% } else { %>
                                            <button type=button class="mday" onclick="selectDay(this, <%= i %>)"><%= i %></button>
                                        <% } %>
                                    <% } %>
                                </div>
                            </div>

                            <div id="year" class="tabcontent">
                                <!--<label for="date">Date de la rÃ©currence :</label>-->
                                <ul class="yearList">
                                    <% rec.yearDay.forEach((date, index) => { %>
                                        <li data-index="<%= index %>">
                                            <%= new Date(date).toLocaleDateString('en-GB', { day: '2-digit', month: '2-digit' }) %>
                                            <button type="button" onclick="removeDate(<%= index %>)"></button>
                                        </li>
                                    <% }) %>
                                </ul>
                                <div class="selector-year-day">
                                    <input class="annee" type="date" id="dateYearRecurrence" name="date" placeholder="DD/MM">
                                    <button type=button id="addButton">
                                        <svg xmlns="http://www.w3.org/2000/svg" class="svg-icon" viewBox="0 0 1024 1024" version="1.1"><path d="M810.65984 170.65984q18.3296 0 30.49472 12.16512t12.16512 30.49472q0 18.00192-12.32896 30.33088l-268.67712 268.32896 268.67712 268.32896q12.32896 12.32896 12.32896 30.33088 0 18.3296-12.16512 30.49472t-30.49472 12.16512q-18.00192 0-30.33088-12.32896l-268.32896-268.67712-268.32896 268.67712q-12.32896 12.32896-30.33088 12.32896-18.3296 0-30.49472-12.16512t-12.16512-30.49472q0-18.00192 12.32896-30.33088l268.67712-268.32896-268.67712-268.32896q-12.32896-12.32896-12.32896-30.33088 0-18.3296 12.16512-30.49472t30.49472-12.16512q18.00192 0 30.33088 12.32896l268.32896 268.67712 268.32896-268.67712q12.32896-12.32896 30.33088-12.32896z"/></svg>
                                    </button>
                                </div>
                                
                            </div>
                        </div>
                    </form>
                </div>
            </form>
        </div>
    </div>

    <script>
        const colorInput = document.querySelector("#color");
       
  
        const agendaId = "<%= rendezvous.agendaId %>";
        const recId = "<%= recIdd %>";
        const ya = <%- JSON.stringify(rec.yearDay) %>;
        const recurrencesD = {"week": [<%= rec.weekDay %>] ,"month":[<%= rec.monthDay %>],"year":ya}
        const addBoutton = document.querySelector("#addButton")
        let currentTab = null;
        addBoutton.addEventListener("click",addYearDay)
        function clearSelection() {
            if (currentTab) {
                document.querySelector("#dateUntilRecurrence").value = ''
                recurrencesD[currentTab] = []
                Array.from(document.querySelector(`#${currentTab} > .l-content`).children).forEach(c => {
                    c.classList.remove('selected')
                })
            }
        }
        function selectAll() {
            for (let k of Object.keys(recurrencesD)) {
                if (k !== currentTab && recurrencesD[k].length > 0) {
                    afficherPopUp(`RÃ©currence ${k === 'year' ? "AnnÃ©e" : k === 'month' ? "Mois" : 'Semaine'} dÃ©jÃ  dÃ©fini`, false)
                    return 1;
                }
            }
            recurrencesD[currentTab] = (currentTab === "month" ? [...Array(32).keys()].slice(1) : currentTab === "week" ? [...Array(7).keys()] : [])
            Array.from(document.querySelector(`#${currentTab} > .l-content`).children).forEach(c => {
                c.classList.add('selected')
            })
        }
        function selectDay(e, day) {
            for (let k of Object.keys(recurrencesD)) {
                if (k !== currentTab && recurrencesD[k].length > 0) {
                    afficherPopUp(`RÃ©currence ${k === 'year' ? "AnnÃ©e" : k === 'month' ? "Mois" : 'Semaine'} dÃ©jÃ  dÃ©fini`, false)
                    return 1;
                }
            }
            e.classList.toggle("selected")
            const index = recurrencesD[currentTab].indexOf(day);

            if (index===-1) {
                recurrencesD[currentTab].push(day);
            } else {
                recurrencesD[currentTab].splice(index, 1);
            }
        }
        function removeDate(index) {
            recurrencesD.year.splice(index, 1);
            document.querySelector(`.yearList li[data-index="${index}"]`).remove();
        }
        function addYearDay() {

            for (let k of Object.keys(recurrencesD)) {
                if (k !== currentTab && recurrencesD[k].length > 0) {
                    afficherPopUp(`RÃ©currence ${k === 'year' ? "AnnÃ©e" : k === 'month' ? "Mois" : 'Semaine'} dÃ©jÃ  dÃ©fini`, false)
                    return 1;
                }
            }
            const date = new Date(document.querySelector("#dateYearRecurrence").value)
            if (date.getDate()) {
                const index = recurrencesD.year.findIndex(e => e.toString() === date.toString());
                if (index === -1) {
                    const li = document.createElement("li");
                    li.textContent = date.toLocaleDateString('en-GB', { day: '2-digit', month: '2-digit' });

                    const button = document.createElement("button");
                    button.type = "button"
                    button.addEventListener('click', function(e) {
                        recurrencesD.year.splice(index, 1);
                        e.currentTarget.parentNode.remove()
                    })

                    li.appendChild(button)
                    document.querySelector(".yearList").appendChild(li)
                    recurrencesD.year.push(date);
                } else {
                    console.log("Date dÃ©jÃ  ajoutÃ©s")
                }
                document.querySelector("#dateYearRecurrence").value = ''
            }
        }
        function afficherPopUp(text, good) {

            const popUp = document.querySelector(".pop-up-info")
            popUp.innerHTML = ''
            popUp.innerHTML = good ? `
                <svg viewBox="0 0 512 512">
                    <g transform="translate(0.000000,512.000000) scale(0.100000,-0.100000)" fill="#4bc373" stroke="none">
                    <path d="M2361 5110 c-442 -37 -865 -184 -1222 -426 -164 -110 -242 -175 -394 -328 -240 -242 -414 -499 -539 -799 -240 -571 -267 -1198 -79 -1781 277 -859 995 -1514 1873 -1710 364 -81 753 -81 1120 0 676 149 1277 586 1639 1192 329 551 436 1227 295 1862 -167 751 -675 1395 -1368 1735 -246 120 -524 205 -786 239 -148 19 -406 27 -539 16z m1552 -1290 c179 -67 298 -268 269 -452 -5 -37 -24 -98 -41 -136 -30 -63 -82 -117 -944 -978 -1000 -998 -946 -950 -1095 -976 -54 -9 -85 -9 -134 0 -134 25 -148 36 -575 464 -426 427 -431 433 -455 568 -13 77 0 167 36 245 29 64 110 154 170 189 135 79 326 73 450 -14 23 -16 131 -119 241 -229 l200 -201 735 734 c449 448 753 744 780 759 106 61 247 71 363 27z"/>
                    <path d="M3675 3737 c-22 -8 -56 -22 -75 -31 -19 -10 -379 -362 -800 -782 l-765 -764 -240 241 c-286 287 -297 294 -435 294 -83 0 -101 -3 -145 -27 -62 -32 -130 -104 -158 -166 -16 -35 -21 -67 -21 -127 0 -137 -2 -135 441 -576 435 -433 423 -424 563 -424 147 0 84 -55 1092 953 1008 1008 952 944 952 1092 0 177 -127 314 -302 326 -41 2 -83 -1 -107 -9z"/>
                    </g>
                </svg>
            ` :
                        `
                <svg viewBox="0 0 48 48">
                    <g transform="matrix(.99999 0 0 .99999-58.37.882)" enable-background="new" id="g13" style="fill-opacity:1">
                        <circle cx="82.37" cy="23.12" r="24" fill="url(#0)" id="circle9" style="fill-opacity:1;fill:#dd3333"/>
                        <path d="m87.77 23.725l5.939-5.939c.377-.372.566-.835.566-1.373 0-.54-.189-.997-.566-1.374l-2.747-2.747c-.377-.372-.835-.564-1.373-.564-.539 0-.997.186-1.374.564l-5.939 5.939-5.939-5.939c-.377-.372-.835-.564-1.374-.564-.539 0-.997.186-1.374.564l-2.748 2.747c-.377.378-.566.835-.566 1.374 0 .54.188.997.566 1.373l5.939 5.939-5.939 5.94c-.377.372-.566.835-.566 1.373 0 .54.188.997.566 1.373l2.748 2.747c.377.378.835.564 1.374.564.539 0 .997-.186 1.374-.564l5.939-5.939 5.94 5.939c.377.378.835.564 1.374.564.539 0 .997-.186 1.373-.564l2.747-2.747c.377-.372.566-.835.566-1.373 0-.54-.188-.997-.566-1.373l-5.939-5.94" fill="#fff" fill-opacity=".842" id="path11" style="fill-opacity:1;fill:#ffffff"/>
                    </g>
                </svg>
            `;
            const span1 = document.createElement("span")
            span1.innerText = text
            popUp.appendChild(span1)
            popUp.classList.add('display-pop-up');
            setTimeout(() => {
                popUp.classList.remove('display-pop-up');
            }, 5000)
        }

        function calculerHeureFin(dateDebut,heureDebut, duree) {


            const dateString = `${dateDebut}T${heureDebut}:00`; // ajoute les secondes, format ISO 8601
            const durationInMilliseconds = duree * 60 * 1000;
            const date = new Date(dateString);
            const [heures, minutes] = heureDebut.split(':').map(Number);

            return new Date(date.getTime()+durationInMilliseconds);
        }
        function openMode(e, mode) {

            document.querySelectorAll(".tabcontent").forEach(tab => {
                if (tab.id === mode) {
                    tab.style.display = 'flex';
                } else {
                    tab.style.display = 'none';
                }
            })
            currentTab = mode

            document.querySelectorAll(".tablinks").forEach(b => {
                b.parentElement.classList.remove("active");
            })
            e.parentElement.classList.add("active");
            document.querySelectorAll(".tabcontent").forEach(b => {
                b.style.border = '1px solid #cfbff7';
                b.style.borderTop = 'none'
            })
            document.querySelector(".common").style.removeProperty('border-top')
            document.querySelector(".common").style.border = '1px solid #cfbff7'
        }
        document.getElementById('edit-rendezvous-form').addEventListener('submit', async function(event) {
            event.preventDefault();
            const rdvId = this.dataset.id;
            const nom = document.getElementById('nom').value;
            const date = document.getElementById('date').value;
            const heureDebut = document.getElementById('heureDebut').value;
            const duree = parseFloat(document.getElementById('duree').value); // Lire la durÃ©e en heures
            const description = document.getElementById('description').value;
            const rappel = document.getElementById("rappel").value;
            const finRecurrence = document.getElementById('dateUntilRecurrence').value;
            const color = document.getElementById("color").value
            if (nom && date && heureDebut && duree){
                const dateString = `${date}T${heureDebut}:00`; // ajoute les secondes, format ISO 8601
                const dateDebut = new Date(dateString);
                // Calculer. l'heure de fin Ã  partir de l'heure de dÃ©but et de la durÃ©e en heures
                const dateFin = calculerHeureFin(date,heureDebut, duree);
                console.log(!finRecurrence || dateDebut <= new Date(finRecurrence))
                if (!finRecurrence || dateDebut <= new Date(finRecurrence)){
                    console.log("ca part")
                    const rendezvous = {
                        name:nom,
                        dateDebut:dateDebut,
                        dateFin:dateFin,
                        description:description,
                        recId: recId,
                        recurrences: recurrencesD,
                        finRecurrence: finRecurrence ? new Date(finRecurrence) : null,
                        priorite: priorite,
                        rappel:rappel,
                        backgroundcolor:color
                    }
                    try {
                        const response = await fetch(`/rendezvous/${rdvId}`, {
                            method: 'PUT',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            credentials: 'include',
                            body: JSON.stringify(rendezvous)
                        });
                        if (response.ok) {
                            afficherPopUp("Rendez-vous modifiÃ© avec succÃ¨s !", true);
                            window.location.href = document.referrer;
                        }
                    } catch (error) {
                        console.error('Erreur lors de la modification:', error);
                        afficherPopUp("Une erreur s'est produite lors de la modification du rendez-vous.", false);
                    }
                } else if (dateDebut > new Date(finRecurrence)) {
                    afficherPopUp('Date de fin de rÃ©currences plus rÃ©centes que la date du rendez-vous.', false)
                }

            }
        });


        // Bascule du mode sombre
const toggleSwitch = document.getElementById('darkModeToggle');
const body = document.body;

// Toggle dark mode
function toggleDarkMode() {
            document.body.classList.toggle('dark-mode');
        }

    </script>
</body>
</html>
